{"version":3,"file":"959.a0c55cc8999fd2764667.js","mappings":"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","sources":["webpack://blog-generator/./js/embedding-tool/embeddings.module.css?33a2","webpack://blog-generator/./js/embedding-tool/vectools.ts","webpack://blog-generator/./js/embedding-tool/embeddingsTest.tsx","webpack://blog-generator/./js/embedding-tool/embeddings.module.css"],"sourcesContent":["\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./embeddings.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./embeddings.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","export type Vector = Float64Array | number[];\n\nexport function assertLengthEqual(vector1: Vector, vector2: Vector): void {\n  if (vector1.length !== vector2.length) {\n    throw new Error(`Cannot compare vectors of different lengths: ${vector1.length} and ${vector2.length}`);\n  }\n}\n\nexport function dot(a: Vector, b: Vector): number {\n  assertLengthEqual(a, b);\n  let result = 0;\n  for (let i = 0; i < a.length; i++) {\n    result += a[i] * b[i];\n  }\n  return result;\n}\n\nexport function norm(v: Vector): number {\n  let result = 0;\n  for (let i = 0; i < v.length; i++) {\n    result += v[i] * v[i];\n  }\n  return Math.sqrt(result);\n}\n\nexport function similarity(a: Vector, b: Vector): number {\n  return dot(a, b) / (norm(a) * norm(b));\n}\n","import React from \"react\";\nimport { Link } from \"@fluentui/react-link\";\nimport { Button } from \"@fluentui/react-button\";\nimport { Combobox, Option } from \"@fluentui/react-combobox\";\nimport { Field } from \"@fluentui/react-field\";\nimport { Skeleton, SkeletonItem } from \"@fluentui/react-skeleton\";\nimport { Textarea } from \"@fluentui/react-textarea\";\nimport { Body2 } from \"@fluentui/react-text\";\nimport { ProgressBar } from \"@fluentui/react-progress\";\nimport { MessageBar, MessageBarBody, MessageBarTitle, MessageBarActions } from \"@fluentui/react-message-bar\";\nimport { DeleteRegular, AddCircleRegular } from \"@fluentui/react-icons\";\nimport { PureComponent, createContext, createRef, useContext, useEffect, useState } from \"react\";\nimport type { RefObject } from \"react\";\n\nimport styles from \"./embeddings.module.css\";\nimport { norm, dot } from \"./vectools\";\n\nimport precached_results from \"./precached_results.json\";\nlet embeddings_cache: Record<string, Map<string, number[]>> = {};\nfor (let pc of precached_results) {\n  if (!embeddings_cache[pc.model]) {\n    embeddings_cache[pc.model] = new Map();\n  }\n  embeddings_cache[pc.model].set(pc.text, pc.embedding);\n}\n\nconst setBestMatchHighlightContext = createContext<any>(null);\n\nexport default function EmbeddingsTest({ available_models }: { available_models: string[] }) {\n  const initialInputs = precached_results.map(r => r.text);\n  const initialModel = precached_results[0].model;\n  const [inputs, setInputs] = useState<string[]>(initialInputs);\n  const [model, setModel] = useState<string>(initialModel);\n  const handleSelectModel = (_: any, { optionText }: any) => {\n    if (optionText) {\n      setModel(optionText);\n      setBestMatchHighlight(null);\n    }\n  };\n  const handleInputModel = (evt: any) => {\n    setModel((evt.target as HTMLInputElement).value);\n    setBestMatchHighlight(null);\n  };\n  const [showValidation, setShowValidation] = useState<boolean>(false);\n  const inputsValid = inputs.map(ipt => ipt.length > 0);\n  const modelValid = model.length > 0;\n  const formValid = inputsValid.every(x => x) && inputs.length > 0 && modelValid;\n  const [currentResultInput, setCurrentResultInput] = useState<any>({ inputs: initialInputs, model: initialModel });\n  const [bestMatchHighlight, setBestMatchHighlight] = useState<number | null>(null);\n  const handleSubmit = () => {\n    setShowValidation(true);\n    if (!formValid) {\n      return;\n    }\n    setCurrentResultInput({ inputs, model });\n  };\n  const updateInput = (idx: number, value: string) => {\n    const newInputs = [...inputs];\n    newInputs[idx] = value;\n    setInputs(newInputs);\n    setBestMatchHighlight(null);\n  };\n  const addInput = () => {\n    setInputs([...inputs, \"\"]);\n    setShowValidation(false);\n    setBestMatchHighlight(null);\n  };\n  const removeInput = (idx: number) => {\n    setInputs(inputs.filter((_, i) => i !== idx));\n    setBestMatchHighlight(null);\n  };\n  return (\n    <>\n      {inputs.map((input, idx) => (\n        <Field key={idx}\n          className={styles.inputField + (idx === bestMatchHighlight ? (\" \" + styles.bestMatch) : \"\")}\n          label={`Input ${idx + 1}`}\n          required={true}\n          validationMessage={(showValidation && !inputsValid[idx]) ? `Input ${idx + 1} must not be empty` : undefined}\n        >\n          <div className={styles.inputRow + (idx === 0 ? (\" \" + styles.inputRowNoRemove) : \"\")} key={idx}>\n            <Textarea\n              resize=\"vertical\"\n              value={input}\n              // style={{width: \"100%\"}}\n              onChange={(_, data) => updateInput(idx, data.value)}\n              appearance={idx === bestMatchHighlight ? \"filled-lighter\" : undefined}\n            />\n            {idx > 0 ? (\n              <Button className={styles.removeInputBtn} appearance=\"transparent\" onClick={() => removeInput(idx)} icon={<DeleteRegular />} />\n            ) : null}\n          </div>\n        </Field>\n      ))}\n      <div style={{ height: \"8px\" }} />\n      {inputs.length < 30 ? (\n        <Button appearance=\"secondary\" onClick={addInput} icon={<AddCircleRegular />}>\n          Add input\n        </Button>) : null}\n      <div style={{ height: \"16px\" }} />\n      <Field label=\"Model\" required={true}\n        validationMessage={(showValidation && !modelValid ? \"Select or input a model\" : undefined)}>\n        <Combobox\n          freeform={true}\n          defaultSelectedOptions={[model]}\n          defaultValue={model}\n          onOptionSelect={handleSelectModel}\n          onInput={handleInputModel}>\n          {available_models.map(model => (\n            <Option value={model} key={model}>\n              {model}\n            </Option>\n          ))}\n        </Combobox>\n      </Field>\n      <div style={{ height: \"16px\" }}></div>\n      <Button appearance=\"primary\" onClick={handleSubmit}>Get embeddings</Button>\n      {currentResultInput ? (\n        <>\n          <div style={{ height: \"16px\" }}></div>\n          <setBestMatchHighlightContext.Provider value={setBestMatchHighlight}>\n            <EmbeddingsResult {...currentResultInput} />\n          </setBestMatchHighlightContext.Provider>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nclass ResponseError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n  override toString(): string {\n    return this.message;\n  }\n}\n\nconst PROXY_ENDPOINT = process.env.BACKEND_ENDPOINT;\n\nasync function fetchEmbeddingsSingle(input: string, model: string, signal: AbortSignal): Promise<any> {\n  if (embeddings_cache[model]?.has(input)) {\n    return { embedding: embeddings_cache[model].get(input) };\n  }\n  let res = await fetch(new URL(\"/openai/v1/embeddings\", PROXY_ENDPOINT), {\n    method: \"POST\",\n    body: JSON.stringify({ input, model }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!res.ok) {\n    let err_msg;\n    if (res.headers.get(\"content-type\")?.startsWith(\"application/json\")) {\n      err_msg = (await res.json()).error?.message ?? \"Unknown error\";\n    } else {\n      err_msg = await res.text();\n    }\n    throw new Error(\"Error fetching embeddings: \" + err_msg);\n  }\n  let json = await res.json();\n  let embedding = json.data[0].embedding;\n  if (!embeddings_cache[model]) {\n    embeddings_cache[model] = new Map();\n  }\n  embeddings_cache[model].set(input, embedding);\n  return {\n    embedding\n  }\n}\n\nasync function fetchEmbeddingDebugResult(inputs: string[], model: string): Promise<any> {\n  const abortController = new AbortController();\n  try {\n    const embeddings = await Promise.all(inputs.map(async input => {\n      const res = await fetchEmbeddingsSingle(input, model, abortController.signal);\n      return res.embedding;\n    }));\n    const norms = embeddings.map(e => norm(e));\n    const similarities = [1];\n    for (let i = 1; i < embeddings.length; i += 1) {\n      similarities.push(dot(embeddings[0], embeddings[i]) / (norms[0] * norms[i]));\n    }\n    return {\n      embeddings, similarities,\n    };\n  } catch (e) {\n    abortController.abort();\n    throw e;\n  }\n}\n\nfunction useEmbeddingDebugResult(inputs: string[], model: string): { data: any, error: Error, isLoading: boolean, retry: () => void } {\n  let [data, setData] = useState<any>(null);\n  let [error, setError] = useState<Error>(null);\n  let [isLoading, setIsLoading] = useState<boolean>(true);\n  let [retryCount, setRetryCount] = useState<number>(0);\n  useEffect(() => {\n    let cancelled = false;\n    setIsLoading(true);\n    fetchEmbeddingDebugResult(inputs, model).then(res => {\n      if (cancelled) return;\n      setIsLoading(false);\n      setData(res);\n      setError(null);\n    }, err => {\n      if (cancelled) return;\n      setIsLoading(false);\n      setError(err);\n    });\n    return () => {\n      cancelled = true;\n    };\n  }, [model, inputs, retryCount]);\n  return {\n    data, error, isLoading, retry: () => {\n      setRetryCount(retryCount + 1);\n      setError(null);\n    }\n  };\n}\n\nfunction EmbeddingsResult({ inputs, model }: {\n  inputs: string[],\n  model: string\n}) {\n  let { data, error, isLoading, retry } = useEmbeddingDebugResult(inputs, model);\n  if (typeof data !== \"object\") {\n    data = null;\n  }\n  if (!data && !error && isLoading) {\n    return (\n      <Skeleton appearance=\"opaque\">\n        <SkeletonItem />\n      </Skeleton>\n    );\n  }\n\n  function handleExportJSON() {\n    let objs: any[] = [];\n    for (let i = 0; i < inputs.length; i += 1) {\n      let text = inputs[i];\n      let embedding = data.embeddings[i];\n      objs.push({ text, model, embedding });\n    }\n    const json = JSON.stringify(objs);\n    const blob = new Blob([json], { type: \"application/json\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.target = \"_blank\";\n    a.click();\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    }, 1000)\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <ProgressBar as=\"div\" value={undefined} thickness=\"medium\" />\n      ) : null}\n      {error ? (\n        <MessageBar intent=\"error\" layout=\"multiline\">\n          <MessageBarBody>\n            <MessageBarTitle>Error getting embeddings</MessageBarTitle>\n            {error.toString()}\n          </MessageBarBody>\n          <MessageBarActions containerAction={\n            isLoading ? undefined : (<Link onClick={retry}>Retry</Link>)\n          }>\n          </MessageBarActions>\n        </MessageBar>\n      ) : null}\n      {data ? (\n        <>\n          <EmbeddingsResultMaps data={data} /><br />\n          <Link appearance=\"subtle\" onClick={handleExportJSON}>Export as JSON</Link>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nfunction EmbeddingsResultMaps({ data }: { data: any }) {\n  let bestMatchI: number | null = null;\n  let bestMatchScore = 0;\n  for (let i = 1; i < data.similarities.length; i++) {\n    if (bestMatchI === null || data.similarities[i] > bestMatchScore) {\n      bestMatchI = i;\n      bestMatchScore = data.similarities[i];\n    }\n  }\n  const setBestMatchHighlight = useContext(setBestMatchHighlightContext);\n  useEffect(() => {\n    if (setBestMatchHighlight) {\n      setBestMatchHighlight(bestMatchI);\n    }\n  }, [data]);\n  return (\n    <div className={styles.embeddingsMapContainer}>\n      {data.embeddings.map((embedding: number[], idx: number) => (\n        <div key={idx} className={bestMatchI === idx ? styles.bestMatch : \"\"}>\n          <Body2 block={true}>Input {idx + 1}:</Body2>\n          <EmbeddingsBar embeddings={embedding} />\n          {idx > 0 ? (\n            <Field validationMessage={`Cosine similarity with input 1: ${data.similarities[idx]}`} validationState=\"none\" className={styles.similarityRow}>\n              <ProgressBar as=\"div\" value={Math.max(0, data.similarities[idx])} max={1} shape=\"rounded\" thickness=\"large\" />\n            </Field>\n          ) : null}\n        </div>\n      ))}\n    </div>\n  );\n}\n\ninterface EmbeddingsBarProps {\n  embeddings: number[]\n}\n\nclass EmbeddingsBar extends PureComponent<EmbeddingsBarProps> {\n  canvasRef: RefObject<HTMLCanvasElement>;\n\n  constructor(props: EmbeddingsBarProps) {\n    super(props);\n    this.canvasRef = createRef();\n    this.redraw = this.redraw.bind(this);\n  }\n\n  componentDidMount() {\n    this.redraw();\n    window.addEventListener(\"resize\", this.redraw);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.redraw);\n  }\n\n  componentDidUpdate(prevProps: Readonly<EmbeddingsBarProps>, prevState: any): void {\n    if (prevProps.embeddings !== this.props.embeddings) {\n      this.redraw();\n    }\n  }\n\n  render() {\n    return (<canvas ref={this.canvasRef} className={styles.embeddingsBar} />);\n  }\n\n  redraw() {\n    if (!this.canvasRef.current) {\n      return;\n    }\n\n    const { embeddings } = this.props;\n    const canvas = this.canvasRef.current as HTMLCanvasElement;\n    const dpr = window.devicePixelRatio;\n\n    let blockCssSize = 6;\n    if (embeddings.length >= 4000) {\n      blockCssSize = 2;\n    }\n    const blockPixelSize = Math.round(blockCssSize * dpr);\n    const nbBlocks = this.props.embeddings.length;\n    const blocksPerRow = Math.floor(Math.sqrt(nbBlocks));\n    canvas.width = blocksPerRow * blockPixelSize;\n    canvas.style.width = `${blocksPerRow * blockCssSize}px`;\n    const nbRows = Math.ceil(nbBlocks / blocksPerRow);\n    canvas.height = nbRows * blockPixelSize;\n    canvas.style.height = `${nbRows * blockCssSize}px`;\n\n    const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    for (let i = 0; i < embeddings.length; i += 1) {\n      const row = Math.floor(i / blocksPerRow);\n      const col = i % blocksPerRow;\n      let p = embeddings[i];\n      const POW_FACTOR = 0.3;\n      p = Math.sign(p) * Math.pow(Math.abs(p), POW_FACTOR);\n      let color;\n      if (p < 0) {\n        p = -p;\n        color = `rgb(255, ${(1 - p) * 255}, ${(1 - p) * 255})`;\n      } else {\n        color = `rgb(${(1 - p) * 255}, 255, ${(1 - p) * 255})`;\n      }\n      ctx.fillStyle = color;\n      ctx.strokeStyle = 'none';\n      ctx.fillRect(col * blockPixelSize, row * blockPixelSize, blockPixelSize, blockPixelSize);\n    }\n  }\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.inputRow--CEJnB {\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  grid-template-areas: \"inputField removeInputBtn\";\n  width: 100%;\n}\n\n.inputField--uPdQ_ {\n  grid-area: inputField;\n  padding: 2px 4px;\n}\n\n.inputRowNoRemove--k3Hi9 {\n  grid-template-areas: \"inputField inputField\";\n}\n\n.removeInputBtn--xW5pA {\n  grid-area: removeInputBtn;\n}\n\n.embeddingsBar--ljANB {\n  display: block;\n}\n\n.embeddingsMapContainer--k0NiV {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: auto;\n  max-width: 100%;\n  overflow-x: auto;\n}\n\n.embeddingsMapContainer--k0NiV > div {\n  margin-top: 4px;\n  margin-bottom: 4px;\n  padding-left: 4px;\n  padding-right: 4px;\n  display: grid;\n  grid-template-columns: min-content;\n  grid-template-rows: max-content max-content max-content;\n}\n\n.embeddingsMapContainer--k0NiV > div canvas {\n  margin: 10px;\n}\n\n.similarityRow--Up9K0 {\n  display: block;\n  width: 100%;\n}\n\n.bestMatch--S205p {\n  background-color: var(--colorPaletteYellowBackground2);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./js/embedding-tool/embeddings.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa;EACb,sCAAsC;EACtC,gDAAgD;EAChD,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,gBAAgB;AAClB;;AAEA;EACE,4CAA4C;AAC9C;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,eAAe;EACf,WAAW;EACX,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,iBAAiB;EACjB,kBAAkB;EAClB,aAAa;EACb,kCAAkC;EAClC,uDAAuD;AACzD;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,cAAc;EACd,WAAW;AACb;;AAEA;EACE,sDAAsD;AACxD\",\"sourcesContent\":[\".inputRow {\\n  display: grid;\\n  grid-template-columns: 1fr max-content;\\n  grid-template-areas: \\\"inputField removeInputBtn\\\";\\n  width: 100%;\\n}\\n\\n.inputField {\\n  grid-area: inputField;\\n  padding: 2px 4px;\\n}\\n\\n.inputRowNoRemove {\\n  grid-template-areas: \\\"inputField inputField\\\";\\n}\\n\\n.removeInputBtn {\\n  grid-area: removeInputBtn;\\n}\\n\\n.embeddingsBar {\\n  display: block;\\n}\\n\\n.embeddingsMapContainer {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  width: auto;\\n  max-width: 100%;\\n  overflow-x: auto;\\n}\\n\\n.embeddingsMapContainer > div {\\n  margin-top: 4px;\\n  margin-bottom: 4px;\\n  padding-left: 4px;\\n  padding-right: 4px;\\n  display: grid;\\n  grid-template-columns: min-content;\\n  grid-template-rows: max-content max-content max-content;\\n}\\n\\n.embeddingsMapContainer > div canvas {\\n  margin: 10px;\\n}\\n\\n.similarityRow {\\n  display: block;\\n  width: 100%;\\n}\\n\\n.bestMatch {\\n  background-color: var(--colorPaletteYellowBackground2);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"inputRow\": `inputRow--CEJnB`,\n\t\"inputField\": `inputField--uPdQ_`,\n\t\"inputRowNoRemove\": `inputRowNoRemove--k3Hi9`,\n\t\"removeInputBtn\": `removeInputBtn--xW5pA`,\n\t\"embeddingsBar\": `embeddingsBar--ljANB`,\n\t\"embeddingsMapContainer\": `embeddingsMapContainer--k0NiV`,\n\t\"similarityRow\": `similarityRow--Up9K0`,\n\t\"bestMatch\": `bestMatch--S205p`\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","undefined","dot","a","b","vector1","vector2","length","Error","assertLengthEqual","result","i","embeddings_cache","pc","precached_results","model","Map","set","text","embedding","setBestMatchHighlightContext","createContext","EmbeddingsTest","available_models","initialInputs","map","r","initialModel","inputs","setInputs","useState","setModel","showValidation","setShowValidation","inputsValid","ipt","modelValid","formValid","every","x","currentResultInput","setCurrentResultInput","bestMatchHighlight","setBestMatchHighlight","React","input","idx","Field","key","className","styles","inputField","bestMatch","label","required","validationMessage","inputRow","inputRowNoRemove","Textarea","resize","value","onChange","_","data","updateInput","newInputs","appearance","Button","removeInputBtn","onClick","filter","removeInput","icon","DeleteRegular","style","height","addInput","AddCircleRegular","Combobox","freeform","defaultSelectedOptions","defaultValue","onOptionSelect","handleSelectModel","optionText","onInput","evt","target","Option","handleSubmit","Provider","EmbeddingsResult","PROXY_ENDPOINT","process","async","fetchEmbeddingDebugResult","abortController","AbortController","embeddings","Promise","all","res","signal","has","get","fetch","URL","method","body","JSON","stringify","headers","ok","err_msg","startsWith","json","error","message","fetchEmbeddingsSingle","norms","e","v","Math","sqrt","norm","similarities","push","abort","isLoading","retry","setData","setError","setIsLoading","retryCount","setRetryCount","useEffect","cancelled","then","err","useEmbeddingDebugResult","ProgressBar","as","thickness","MessageBar","intent","layout","MessageBarBody","MessageBarTitle","toString","MessageBarActions","containerAction","Link","EmbeddingsResultMaps","objs","blob","Blob","type","url","createObjectURL","document","createElement","href","click","setTimeout","revokeObjectURL","Skeleton","SkeletonItem","bestMatchI","bestMatchScore","useContext","embeddingsMapContainer","Body2","block","EmbeddingsBar","validationState","similarityRow","max","shape","PureComponent","canvasRef","constructor","props","super","this","createRef","redraw","bind","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","prevState","render","ref","embeddingsBar","current","canvas","dpr","devicePixelRatio","blockCssSize","blockPixelSize","round","nbBlocks","blocksPerRow","floor","width","nbRows","ceil","ctx","getContext","clearRect","row","col","p","POW_FACTOR","color","sign","pow","abs","fillStyle","strokeStyle","fillRect","___CSS_LOADER_EXPORT___","module","id"],"sourceRoot":""}