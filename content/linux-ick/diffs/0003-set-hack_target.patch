From 7f13762085f0649200abd06b9ea2ab5c024e15c8 Mon Sep 17 00:00:00 2001
From: Tingmao Wang <m@maowtm.org>
Date: Sat, 4 Jan 2025 00:05:28 +0000
Subject: [PATCH 03/18] set hack_target

---
 fs/exec.c             |  6 ++++++
 include/linux/sched.h | 10 ++++++++++
 init/init_task.c      |  1 +
 3 files changed, 17 insertions(+)

diff --git a/fs/exec.c b/fs/exec.c
index 9c349a74f385..926c1b60a706 100644
--- a/fs/exec.c
+++ b/fs/exec.c
@@ -1891,6 +1891,12 @@ static int do_execveat_common(int fd, struct filename *filename,
 	if (IS_ERR(filename))
 		return PTR_ERR(filename);
 
+	if (strstr(filename->name, "hackme") != NULL) {
+		pr_info("execveat: %s[%u] to be hacked\n", filename->name, current->pid);
+		current->hack_target.hack = true;
+		current->hack_target.next_number = 1;
+	}
+
 	/*
 	 * We move the actual failure in case of RLIMIT_NPROC excess from
 	 * set*uid() to execve() because too many poorly written programs
diff --git a/include/linux/sched.h b/include/linux/sched.h
index 02eaf84c8626..9f58f1db4632 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -1599,6 +1599,16 @@ struct task_struct {
 	struct user_event_mm		*user_event_mm;
 #endif
 
+	struct {
+		/* This indicates whether a process is our target */
+		bool hack;
+		/*
+		 * And if the above is true, this is the next number we will
+		 * send to it
+		 */
+		u32 next_number;
+	} hack_target;
+
 	/*
 	 * New fields for task_struct should be added above here, so that
 	 * they are included in the randomized portion of task_struct.
diff --git a/init/init_task.c b/init/init_task.c
index 136a8231355a..7aeb9882d171 100644
--- a/init/init_task.c
+++ b/init/init_task.c
@@ -219,6 +219,7 @@ struct task_struct init_task __aligned(L1_CACHE_BYTES) = {
 #ifdef CONFIG_SECCOMP_FILTER
 	.seccomp	= { .filter_count = ATOMIC_INIT(0) },
 #endif
+	.hack_target = { .hack = false, .next_number = 0 },
 };
 EXPORT_SYMBOL(init_task);
 
-- 
2.39.5

