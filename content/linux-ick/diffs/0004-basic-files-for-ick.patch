From e5c92c60a8043186990b2e71eaa61ab870378c96 Mon Sep 17 00:00:00 2001
From: Mao <m@maowtm.org>
Date: Sat, 4 Jan 2025 20:24:48 +0000
Subject: [PATCH 4/4] basic files for ick

---
 .config               |  2 ++
 Kconfig               |  6 ++++++
 include/linux/ick.h   | 19 +++++++++++++++++++
 include/linux/sched.h |  4 ++++
 init/init_task.c      |  4 +++-
 kernel/ick.c          | 19 +++++++++++++++++++
 6 files changed, 53 insertions(+), 1 deletion(-)
 create mode 100644 include/linux/ick.h
 create mode 100644 kernel/ick.c

diff --git a/.config b/.config
index c7846156e302..b3c57b92579c 100644
--- a/.config
+++ b/.config
@@ -3452,3 +3452,5 @@ CONFIG_ARCH_USE_MEMTEST=y
 #
 # end of Rust hacking
 # end of Kernel hacking
+
+CONFIG_ICK=y
diff --git a/Kconfig b/Kconfig
index 745bc773f567..9b13ab8e4f29 100644
--- a/Kconfig
+++ b/Kconfig
@@ -30,3 +30,9 @@ source "lib/Kconfig"
 source "lib/Kconfig.debug"
 
 source "Documentation/Kconfig"
+
+config ICK
+	bool "ick"
+	default y
+	help
+		instant checkpoint
diff --git a/include/linux/ick.h b/include/linux/ick.h
new file mode 100644
index 000000000000..f1c9f2d99842
--- /dev/null
+++ b/include/linux/ick.h
@@ -0,0 +1,19 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+#ifndef _LINUX_ICK_H
+#define _LINUX_ICK_H
+
+#include <linux/types.h>
+#include <linux/sched.h>
+
+#ifdef CONFIG_ICK
+struct ick_checked_process {
+  // ???
+};
+
+int ick_checkpoint_proc(void);
+int ick_revert_proc(void);
+void ick_cleanup(struct task_struct *task);
+#endif
+
+#endif
diff --git a/include/linux/sched.h b/include/linux/sched.h
index 6adc1add5288..8a631848512c 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -1592,6 +1592,10 @@ struct task_struct {
 	struct user_event_mm		*user_event_mm;
 #endif
 
+#ifdef CONFIG_ICK
+	struct ick_checked_process *ick_data;
+#endif
+
 	struct {
 		/* This indicates whether a process is our target */
 		bool hack;
diff --git a/init/init_task.c b/init/init_task.c
index 51c9b5d202f1..9268dfc1300f 100644
--- a/init/init_task.c
+++ b/init/init_task.c
@@ -219,7 +219,9 @@ struct task_struct init_task __aligned(L1_CACHE_BYTES) = {
 #ifdef CONFIG_SECCOMP_FILTER
 	.seccomp	= { .filter_count = ATOMIC_INIT(0) },
 #endif
-
+#ifdef CONFIG_ICK
+	.ick_data = NULL,
+#endif
   .hack_target = { .hack = false, .next_number = 0 },
 };
 EXPORT_SYMBOL(init_task);
diff --git a/kernel/ick.c b/kernel/ick.c
new file mode 100644
index 000000000000..ab3e1a6f7c14
--- /dev/null
+++ b/kernel/ick.c
@@ -0,0 +1,19 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+#include <linux/ick.h>
+#include <linux/errno.h>
+
+int ick_checkpoint_proc(void) {
+  // TODO: implement
+  return -EPERM;
+}
+
+int ick_revert_proc(void) {
+  // TODO: implement
+  return -EPERM;
+}
+
+void ick_cleanup(struct task_struct *task) {
+  // TODO: implement
+  return;
+}
-- 
2.47.1

